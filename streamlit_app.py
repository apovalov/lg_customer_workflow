import requests
import streamlit as st

# FastAPI server configuration
API_BASE_URL = "http://localhost:8000"

st.set_page_config(page_title="Customer Support AI Assistant", page_icon="üõçÔ∏è", layout="wide")

st.title("üõçÔ∏è Customer Support AI Assistant")
st.markdown("–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –∑–∞–∫–∞–∑–µ, –¥–æ—Å—Ç–∞–≤–∫–µ, –ø–ª–∞—Ç–µ–∂–∞—Ö –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ - —è –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç!")

if "messages" not in st.session_state:
    st.session_state.messages = []

for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

if prompt := st.chat_input("–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"):
    st.session_state.messages.append({"role": "user", "content": prompt})

    with st.chat_message("user"):
        st.markdown(prompt)

    with st.chat_message("assistant"):
        with st.spinner("Thinking..."):
            try:
                message_history = [
                    msg["content"]
                    for msg in st.session_state.messages
                    if msg["role"] == "user"
                ]

                # Make API call to FastAPI server
                payload = {
                    "messages": message_history,
                    "thread_id": "streamlit_session",
                }

                response = requests.post(
                    f"{API_BASE_URL}/chat", json=payload, timeout=30
                )

                if response.status_code == 200:
                    result = response.json()
                    ai_response = result.get("response", "No response received")
                else:
                    ai_response = f"API Error: {response.status_code} - {response.text}"

                st.markdown(ai_response)

                # Add assistant response to chat history
                st.session_state.messages.append(
                    {"role": "assistant", "content": ai_response}
                )

            except requests.exceptions.ConnectionError:
                error_msg = "‚ùå Could not connect to API server. Make sure it's running with: `just api`"
                st.error(error_msg)
                st.session_state.messages.append(
                    {"role": "assistant", "content": error_msg}
                )
            except requests.exceptions.Timeout:
                error_msg = "‚è±Ô∏è Request timed out. Please try again."
                st.error(error_msg)
                st.session_state.messages.append(
                    {"role": "assistant", "content": error_msg}
                )
            except Exception as e:
                error_msg = f"Sorry, I encountered an error: {str(e)}"
                st.error(error_msg)
                st.session_state.messages.append(
                    {"role": "assistant", "content": error_msg}
                )

# Sidebar with information
with st.sidebar:
    st.header("–û —Å–∏—Å—Ç–µ–º–µ")
    st.write("–≠—Ç–æ—Ç –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –º–æ–∂–µ—Ç:")
    st.write("‚Ä¢ –û—Ç—Å–ª–µ–¥–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞")
    st.write("‚Ä¢ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏")
    st.write("‚Ä¢ –ü–æ–º–æ—á—å —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏ –ø–ª–∞—Ç–µ–∂–µ–π")
    st.write("‚Ä¢ –û—Ñ–æ—Ä–º–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞")
    st.write("‚Ä¢ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã")

    # API Status check
    st.header("API Status")
    try:
        health_response = requests.get(f"{API_BASE_URL}/", timeout=5)
        if health_response.status_code == 200:
            st.success("‚úÖ API Server Online")
        else:
            st.error("‚ùå API Server Error")
    except Exception:
        st.error("‚ùå API Server Offline")
        st.info("Start with: `just api`")

    if st.button("Clear Chat History"):
        st.session_state.messages = []
        st.rerun()
